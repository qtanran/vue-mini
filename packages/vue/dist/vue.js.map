{"version":3,"file":"vue.js","sources":["../../reactivity/src/effect.ts","../../reactivity/src/baseHandlers.ts","../../reactivity/src/reactive.ts"],"sourcesContent":["/**\n * effect 函数\n * @param fn 执行方法\n */\nexport function effect(fn) {\n    // 生成 ReactiveEffect 实例\n    const _effect = new ReactiveEffect(fn);\n    // 执行 run 函数\n    _effect.run();\n}\n// 单例的，当前的 effect\nexport let activeEffect;\n/**\n * 响应性触发依赖时的执行类\n */\nexport class ReactiveEffect {\n    constructor(fn) {\n        this.fn = fn;\n    }\n    run() {\n        // 为 activeEffect 赋值\n        activeEffect = this;\n        // 执行 fn 函数\n        return this.fn();\n    }\n}\n/**\n * 收集所有依赖的 WeakMap 实例：\n * key：响应性对象\n * value：Map 对象\n *    key：响应性对象的指定属性\n *    value：指定对象的指定属性的 执行函数\n */\nconst targetMap = new WeakMap();\n/**\n * 用于收集依赖的方法\n * @param target WeakMap 的 Key\n * @param key 代理对象的 key，当依赖被触发时，需要根据该 key 获取\n */\nexport function track(target, key) {\n    // 如果当前不存在执行函数，则直接 return\n    if (!activeEffect)\n        return;\n    // 尝试从 targetMap 中，根据 target 获取 map\n    let depsMap = targetMap.get(target);\n    // 如果获取到的 map 不存在，则生成新的 map 对象，并把该对象赋值给对应的 value\n    if (!depsMap) {\n        targetMap.set(target, (depsMap = new Map()));\n    }\n    // 为指定 map，指定 key 设置回调函数\n    depsMap.set(key, activeEffect);\n    console.log(targetMap);\n}\n/**\n * 触发依赖的方法\n * @param target WeakMap 的 key\n * @param key 代理对象的 key，当依赖被触发时，需要根据该 key 获取\n * @param newValue 指定 key 的最新值\n */\nexport function trigger(target, key, newValue) {\n    // 依据 target 获取存储的 map 实例\n    const depsMap = targetMap.get(target);\n    // 如果 map 不存在，则直接 return\n    if (!depsMap)\n        return;\n    // 依据 key，从 depsMap 中取出 value，该 value 是一个 ReactiveEffect 类型的数据\n    const effect = depsMap.get(key);\n    // 如果 effect 不存在，则直接 return\n    if (!effect)\n        return;\n    // 执行 effect 中保存的 fn 函数\n    effect.fn();\n}\n","import { track, trigger } from './effect';\n/**\n * getter 回调方法\n */\nconst get = createGetter();\n/**\n * 创建 getter 回调方法\n */\nfunction createGetter() {\n    return function (target, key, receiver) {\n        // 利用 Reflect 得到返回值\n        const res = Reflect.get(target, key, receiver);\n        // 收集依赖\n        track(target, key);\n        return res;\n    };\n}\n/**\n * setter 回调方法\n */\nconst set = createSetter();\n/**\n * 创建 setter 回调方法\n */\nfunction createSetter() {\n    return function (target, key, value, receiver) {\n        // 利用 Reflect.set 设置新值\n        const result = Reflect.set(target, key, value, receiver);\n        // 触发依赖\n        trigger(target, key, value);\n        return result;\n    };\n}\n/**\n * 响应性的 handler\n */\nexport const mutableHandlers = {\n    get,\n    set\n};\n","import { mutableHandlers } from './baseHandlers';\n/**\n * 响应性 Map 缓存对象\n * key: target\n * val: proxy\n */\nexport const reactiveMap = new WeakMap();\n/**\n * 为复杂数据类型，创建响应性对象\n * @param target\n * @return 代理对象\n */\nexport function reactive(target) {\n    return createReactiveObject(target, mutableHandlers, reactiveMap);\n}\n/**\n * 创建响应性对象\n * @param target 被代理对象\n * @param baseHandlers\n * @param proxyMap\n */\nfunction createReactiveObject(target, baseHandlers, proxyMap) {\n    // 如果该实例已经被代理，直接读取即可\n    const existingProxy = proxyMap.get(target);\n    if (existingProxy) {\n        return existingProxy;\n    }\n    // 未被代理则生成 proxy 实例\n    const proxy = new Proxy(target, baseHandlers);\n    // 缓存代理对象\n    proxyMap.set(target, proxy);\n    return proxy;\n}\n"],"names":[],"mappings":"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"}